name: Rewrite Feeds and Deploy

on:
  schedule:
    - cron: '0 7 * * *'  # Schedule to run daily at 07:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  rewrite-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out UglyFeed repository
      uses: actions/checkout@v3
      with:
        repository: fabriziosalmi/UglyFeed
        path: UglyFeed

    - name: Check out uglyfeed-cdn repository
      uses: actions/checkout@v3
      with:
        repository: fabriziosalmi/uglyfeed-cdn
        path: uglyfeed-cdn

    - name: Create temporary directory
      run: mkdir -p ${{ runner.temp }}/workdir

    - name: Move repositories to temporary directory
      run: |
        mv ${{ github.workspace }}/UglyFeed ${{ runner.temp }}/workdir/UglyFeed
        mv ${{ github.workspace }}/uglyfeed-cdn ${{ runner.temp }}/workdir/uglyfeed-cdn

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ runner.temp }}/workdir/UglyFeed/requirements.txt

    - name: Download and verify NLTK data
      run: |
        mkdir -p /home/runner/nltk_data
        python -m nltk.downloader -d /home/runner/nltk_data wordnet stopwords omw-1.4
        echo "Verifying NLTK downloads..."
        ls -la /home/runner/nltk_data/corpora
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Set defaults for missing variables
      run: |
        echo "Setting defaults for missing environment variables..."
        if [ -z "${N_CLUSTERS}" ]; then
          echo "N_CLUSTERS is not set, defaulting to 5"
          export N_CLUSTERS=5
        else
          echo "N_CLUSTERS is set to '${N_CLUSTERS}'"
        fi
        if [ -z "${LINKAGE}" ]; then
          echo "LINKAGE is not set, defaulting to 'average'"
          export LINKAGE="average"
        else
          echo "LINKAGE is set to '${LINKAGE}'"
        fi

    - name: Debug environment variables
      run: |
        echo "SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD}"
        echo "MIN_SAMPLES=${MIN_SAMPLES}"
        echo "EPS=${EPS}"
        echo "N_CLUSTERS=${N_CLUSTERS}"
        echo "LINKAGE=${LINKAGE}"
        echo "SELECTED_API=${SELECTED_API}"

    - name: Override config.yaml with secrets
      run: |
        cp ${{ runner.temp }}/workdir/UglyFeed/config.yaml ${{ runner.temp }}/workdir/UglyFeed/config.yaml.bak
        yq eval '.api_config.selected_api = strenv(SELECTED_API)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.api_config.groq_api_url = strenv(GROQ_API_URL)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.api_config.groq_api_key = strenv(GROQ_API_KEY)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.api_config.groq_model = strenv(GROQ_MODEL)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.folders.output_folder = strenv(OUTPUT_FOLDER)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.folders.rewritten_folder = strenv(REWRITTEN_FOLDER)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.github_token = strenv(GENERATOR_TOKEN)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.github_repo = strenv(CDN_REPO)' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml
        yq eval '.enable_github = true' -i ${{ runner.temp }}/workdir/UglyFeed/config.yaml

    - name: Debug config.yaml after overriding
      run: |
        echo "Contents of config.yaml after overriding with secrets:"
        cat ${{ runner.temp }}/workdir/UglyFeed/config.yaml
      env:
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        SELECTED_API: "Groq"
        GROQ_API_URL: ${{ vars.GROQ_API_URL }}
        GROQ_MODEL: "llama3-8b-8192"
        OUTPUT_FOLDER: ${{ runner.temp }}/workdir/UglyFeed/output
        REWRITTEN_FOLDER: ${{ runner.temp }}/workdir/UglyFeed/rewritten
        GENERATOR_TOKEN: ${{ secrets.GENERATOR_TOKEN }}
        CDN_REPO: ${{ vars.CDN_REPO }}

    - name: Run scripts
      run: |
        cd ${{ runner.temp }}/workdir/UglyFeed
        echo "Creating folders"
        mkdir -p output
        mkdir -p rewritten
        echo "Checking folders:"
        find . -type d -name output
        find . -type d -name rewritten
        echo "Ugly is starting.."
        python main.py && python llm_processor.py --api "Groq" --model "llama3-8b-8192" --api_url "https://api.groq.com/openai/v1/chat/completions" --api_key ${{ secrets.GROQ_API_KEY }} --rewritten_folder "rewritten" && python json2rss.py
        echo "Ugly has done!"
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Prepare for deployment
      run: |
        echo "Creating temp_deploy directory..."
        mkdir -p ${{ runner.temp }}/workdir/temp_deploy
        echo "Copying final XML to temp_deploy directory..."
        cp ${{ runner.temp }}/workdir/UglyFeed/uglyfeeds/uglyfeed.xml ${{ runner.temp }}/workdir/temp_deploy/

    - name: Copy to feeds directory in uglyfeed-cdn repo
      run: |
        echo "Copying the final XML to the feeds directory..."
        mkdir -p ${{ runner.temp }}/workdir/uglyfeed-cdn/feeds
        cp ${{ runner.temp }}/workdir/temp_deploy/uglyfeed.xml ${{ runner.temp }}/workdir/uglyfeed-cdn/feeds/

    - name: Commit and push to uglyfeed-cdn
      run: |
        cd ${{ runner.temp }}/workdir/uglyfeed-cdn
        git config --local user.name "fabriziosalmi"
        git config --local user.email "fabrizio.salmi@gmail.com"
        git add feeds/uglyfeed.xml
        git commit -m "Deploy rewritten RSS feed - $(date +'%Y-%m-%d %H:%M:%S') [Model: ${{ vars.GROQ_MODEL }}, API: ${{ vars.SELECTED_API }}]"
        git push https://x-access-token:${{ secrets.GENERATOR_TOKEN }}@github.com/${{ vars.CDN_REPO }} HEAD:main
