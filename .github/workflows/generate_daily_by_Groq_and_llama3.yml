name: Rewrite Feeds and Deploy

on:
  schedule:
    - cron: '0 7 * * *'  # Schedule to run daily at 07:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  rewrite-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out UglyFeed repository
      uses: actions/checkout@v3
      with:
        repository: fabriziosalmi/UglyFeed
        path: UglyFeed

    - name: Check out uglyfeed-cdn repository
      uses: actions/checkout@v3
      with:
        repository: fabriziosalmi/uglyfeed-cdn
        path: uglyfeed-cdn

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r UglyFeed/requirements.txt

    - name: Download and verify NLTK data
      run: |
        mkdir -p /home/runner/nltk_data
        python -m nltk.downloader -d /home/runner/nltk_data wordnet stopwords omw-1.4
        echo "Verifying NLTK downloads..."
        ls -la /home/runner/nltk_data/corpora
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Override config.yaml with secrets
      run: |
        cp UglyFeed/config.yaml UglyFeed/config.yaml.bak
        yq eval '.similarity_threshold = strenv(SIMILARITY_THRESHOLD) | tonumber' -i UglyFeed/config.yaml
        yq eval '.similarity_options.min_samples = strenv(MIN_SAMPLES) | tonumber' -i UglyFeed/config.yaml
        yq eval '.similarity_options.eps = strenv(EPS) | tonumber' -i UglyFeed/config.yaml
        if [ -n "${{ vars.N_CLUSTERS }}" ]; then
          yq eval '.similarity_options.n_clusters = strenv(N_CLUSTERS) | tonumber' -i UglyFeed/config.yaml
        else
          yq eval '.similarity_options.n_clusters = 5 | tonumber' -i UglyFeed/config.yaml
        fi
        if [ -n "${{ vars.LINKAGE }}" ]; then
          yq eval '.similarity_options.linkage = strenv(LINKAGE)' -i UglyFeed/config.yaml
        else
          yq eval '.similarity_options.linkage = "average"' -i UglyFeed/config.yaml
        fi
        yq eval '.api_config.groq_api_key = strenv(GROQ_API_KEY)' -i UglyFeed/config.yaml
        yq eval '.api_config.selected_api = strenv(SELECTED_API)' -i UglyFeed/config.yaml
        yq eval '.api_config.groq_api_url = strenv(GROQ_API_URL)' -i UglyFeed/config.yaml
        yq eval '.api_config.groq_model = strenv(GROQ_MODEL)' -i UglyFeed/config.yaml
        yq eval '.folders.output_folder = strenv(OUTPUT_FOLDER)' -i UglyFeed/config.yaml
        yq eval '.folders.rewritten_folder = strenv(REWRITTEN_FOLDER)' -i UglyFeed/config.yaml
        yq eval '.github_token = strenv(GENERATOR_TOKEN)' -i UglyFeed/config.yaml
        yq eval '.github_repo = strenv(CDN_REPO)' -i UglyFeed/config.yaml
        yq eval '.enable_github = true' -i UglyFeed/config.yaml

      env:
        SIMILARITY_THRESHOLD: ${{ vars.SIMILARITY_THRESHOLD }}
        MIN_SAMPLES: ${{ vars.MIN_SAMPLES }}
        EPS: ${{ vars.EPS }}
        N_CLUSTERS: ${{ vars.N_CLUSTERS }}
        LINKAGE: ${{ vars.LINKAGE }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        SELECTED_API: ${{ vars.SELECTED_API }}
        GROQ_API_URL: ${{ vars.GROQ_API_URL }}
        GROQ_MODEL: ${{ vars.GROQ_MODEL }}
        OUTPUT_FOLDER: ${{ github.workspace }}/UglyFeed/output
        REWRITTEN_FOLDER: ${{ github.workspace }}/UglyFeed/rewritten
        GENERATOR_TOKEN: ${{ secrets.GENERATOR_TOKEN }}
        CDN_REPO: ${{ vars.CDN_REPO }}

    - name: Debug config.yaml
      run: |
        echo "Contents of config.yaml after overriding with secrets:"
        cat UglyFeed/config.yaml

    - name: Run main.py
      run: |
        cd UglyFeed
        python main.py
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Check output directory
      run: |
        echo "Contents of the output directory after main.py execution:"
        ls -la ${{ github.workspace }}/UglyFeed/output
        if [ ! -d "${{ github.workspace }}/UglyFeed/output" ] || [ -z "$(ls -A ${{ github.workspace }}/UglyFeed/output)" ]; then
          echo "Output directory is empty or does not exist. Check main.py execution."
          exit 1
        else
          echo "Output directory is present and contains files."
        fi

    - name: Run llm_processor.py
      run: |
        cd UglyFeed
        python llm_processor.py
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Check rewritten directory
      run: |
        echo "Contents of the rewritten directory after llm_processor.py execution:"
        ls -la ${{ github.workspace }}/UglyFeed/rewritten
        if [ ! -d "${{ github.workspace }}/UglyFeed/rewritten" ] || [ -z "$(ls -A ${{ github.workspace }}/UglyFeed/rewritten)" ]; then
          echo "Rewritten directory is empty or does not exist. Check llm_processor.py execution."
          exit 1
        else
          echo "Rewritten directory is present and contains files."
        fi

    - name: Run json2rss.py
      run: |
        cd UglyFeed
        python json2rss.py
      env:
        NLTK_DATA: /home/runner/nltk_data

    - name: Prepare for deployment
      run: |
        echo "Creating temp_deploy directory..."
        mkdir -p ${{ github.workspace }}/temp_deploy
        echo "Copying final XML to temp_deploy directory..."
        cp ${{ github.workspace }}/UglyFeed/uglyfeeds/uglyfeed.xml ${{ github.workspace }}/temp_deploy/

    - name: Copy to feeds directory in uglyfeed-cdn repo
      run: |
        echo "Copying the final XML to the feeds directory..."
        mkdir -p ${{ github.workspace }}/uglyfeed-cdn/feeds
        cp ${{ github.workspace }}/temp_deploy/uglyfeed.xml ${{ github.workspace }}/uglyfeed-cdn/feeds/

    - name: Commit and push to uglyfeed-cdn
      run: |
        cd ${{ github.workspace }}/uglyfeed-cdn
        git config --local user.name "fabriziosalmi"
        git config --local user.email "fabrizio.salmi@gmail.com"
        git add feeds/uglyfeed.xml
        git commit -m "Deploy rewritten RSS feed - $(date +'%Y-%m-%d %H:%M:%S') [Model: ${{ vars.GROQ_MODEL }}, API: ${{ vars.SELECTED_API }}]"
        git push https://x-access-token:${{ secrets.GENERATOR_TOKEN }}@github.com/${{ vars.CDN_REPO }} HEAD:main
